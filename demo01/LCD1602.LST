C51 COMPILER V9.01   LCD1602                                                               12/11/2019 11:42:29 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN LCD1602.OBJ
COMPILER INVOKED BY: C:\dev\Keil\C51\BIN\C51.EXE LCD1602.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h> //使用_nop_();
   3          #include<string.h>
   4          
   5          /*
   6          * 宏定义
   7          */
   8          // RS为寄存器选择,高电平时选择寄存器,低电平时选择指令寄存器
   9          sbit RS = P2^0;
  10          // RW为读写信号线,高电平时进行读操作,低电平时进行写操作 
  11          sbit RW = P2^1;
  12          // EN为使能端，当EN端由高电平跳变成低电平时，液晶模块执行命令
  13          sbit EN = P2^2;
  14          
  15          /*
  16          * 延时(不准确延时)
  17          *
  18          * @param ms
  19          * @return  
  20          */
  21          void delay_ms(int ms)
  22          {
  23   1              while(ms--){
  24   2                      int i = 100;
  25   2                      while(i--){}
  26   2              }
  27   1      }
  28          
  29          /*
  30          * 检测BF(busy flag)位状态
  31          * 
  32          * @return
  33          */
  34          void test_BF()
  35          {
  36   1              unsigned char LCD_status;
  37   1              do{
  38   2                      P0 = 0xFF; // LCD1602读取状态数据，必须有一个上拉电平
  39   2                      EN = 0; RS = 0; RW = 1; // RS为0时，P0的数据为命令
  40   2                      EN=1;// 让RS和RW设置有效
  41   2                      LCD_status = P0;
  42   2                      _nop_(); _nop_();
  43   2                      EN = 0;
  44   2              }while(LCD_status&0x80); // 1000 0000 忙碌状态
  45   1      }
  46          
  47          /*
  48          * 写数据（一位一位的写）
  49          *
  50          * @param data8 八位数据
  51          * @return
  52          */
  53          void write_data(unsigned char data8)
  54          {
  55   1              test_BF();
C51 COMPILER V9.01   LCD1602                                                               12/11/2019 11:42:29 PAGE 2   

  56   1              EN = 0; RS = 1; RW = 0;
  57   1              P0 = data8;
  58   1              EN = 1; _nop_(); EN = 0;
  59   1      }
  60          
  61          /*
  62          * 写命令
  63          *
  64          * @param cmd8 八位命令
  65          * @return
  66          */
  67          void write_cmd(unsigned char cmd8)
  68          {
  69   1              test_BF();
  70   1              EN = 0; RS = 0; RW = 0;
  71   1              P0 = cmd8;
  72   1              EN = 1; _nop_(); EN = 0;
  73   1      }
  74          
  75          /**
  76          * 写字符串
  77          *
  78          * @param r row
  79          * @param c column
  80          * @param str 字符串
  81          * @return
  82          */
  83          void write_str(int r, int c, char *str)
  84          {
  85   1              int i=0;        
  86   1              unsigned char Addressx[] = {0x80, 0xC0};
  87   1              unsigned char StartAdd = (Addressx[r] | c);//按位或
  88   1      
  89   1              write_cmd(StartAdd);
  90   1              
  91   1              for(i = 0; i < 16; i++){
  92   2                      if(str[i]==0) break;
  93   2                      write_data(str[i]);
  94   2              }
  95   1              // 如果不够16位，用空格填充
  96   1              for(;i < 16; i++){
  97   2                      write_data(' ');        
  98   2              }
  99   1      }
 100          
 101          /**
 102          * LCD初始化
 103          *
 104          * @return
 105          */
 106          void init()
 107          {
 108   1               /*
 109   1                0011_1000 置功能
 110   1                DL=1 --> 8位总线
 111   1                N=0  --> 单行显示
 112   1                F=0  -->      显示5x7的点阵字符
 113   1              */      
 114   1              write_cmd(0x38);
 115   1              /*
 116   1                0000_0001 清显示
 117   1                指令码01H,光标复位到地址00H位置
C51 COMPILER V9.01   LCD1602                                                               12/11/2019 11:42:29 PAGE 3   

 118   1              */ 
 119   1              write_cmd(0x01);
 120   1              /*
 121   1                0000_0110 置输入模式
 122   1                I/D=1 --> 光标右移
 123   1                S=0   --> 屏幕上所有文字左移或右移
 124   1              */
 125   1              write_cmd(0x06);
 126   1              /*
 127   1                0000_1100     显示开/关控制
 128   1                D=1 --> 开显示
 129   1                C=0 --> 无光标
 130   1                B=0 --> 光标不闪烁
 131   1              */
 132   1              write_cmd(0x0C);
 133   1      }
 134          
 135          
 136          
 137          
 138          
 139          
 140          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    213    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
